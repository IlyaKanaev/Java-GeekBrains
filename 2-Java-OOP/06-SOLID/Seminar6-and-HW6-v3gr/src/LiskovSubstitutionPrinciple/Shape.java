package LiskovSubstitutionPrinciple;

/**
 * Класс Shape представляет собой базовую фигуру с шириной и высотой.
 *
 * Принцип подстановки Барбары Лисков (Liskov Substitution Principle, LSP) выражается в том, что объекты
 * базового класса должны быть заменяемыми объектами производного класса без изменения корректности программы.
 * Это означает, что подклассы должны сохранять поведение базового класса, не нарушая инвариантов базового класса.
 *
 * Наследование: Square является подклассом Shape, что соответствует идеи наследования.
 *
 * Переопределение методов: В Square переопределены методы setWidth и setHeight так, чтобы они устанавливают
 * ширину и высоту одинаковыми значениями. Это соответствует ожиданиям, установленным в базовом классе Shape.
 *
 * Сохранение поведения: Код в Square не нарушает корректность программы, предполагая, что объекты типа Square
 * можно использовать везде, где ожидаются объекты типа Shape. Поведение базового класса Shape сохраняется,
 * и код, использующий Shape, может работать с Square без изменений.
 *
 * Таким образом, принцип подстановки Барбары Лисков соблюдается, и объекты подкласса Square могут успешно
 * заменять объекты базового класса Shape без потери корректности программы.
 */
public class Shape {
    protected int width;  // Ширина фигуры
    protected int height; // Высота фигуры

    /**
     * Устанавливает ширину фигуры.
     * @param width Новая ширина фигуры.
     */
    public void setWidth(int width) {
        this.width = width;
    }

    /**
     * Устанавливает высоту фигуры.
     * @param height Новая высота фигуры.
     */
    public void setHeight(int height) {
        this.height = height;
    }

    /**
     * Метод для расчета площади фигуры.
     * @return Площадь фигуры.
     */
    public int area() {
        return this.width * this.height;
    }
}
