package OpenClosedPrinciple;

/**
 * Абстрактный класс Vehicle представляет собой базовый класс для различных типов транспортных средств.
 * Содержит общие свойства, такие как максимальная скорость и тип транспортного средства.
 * Определяет абстрактный метод calculateAllowedSpeed(), который должен быть реализован в подклассах.
 *
 * Принцип открытости/закрытости (Open-Closed Principle, OCP) гласит, что классы должны быть открыты для расширения,
 * но закрыты для модификации. В нашей реализации принцип OCP выполняется следующим образом:
 *
 * Закрытость для модификации:
 *
 * Класс Vehicle содержит абстрактный метод calculateAllowedSpeed(), который предоставляет интерфейс для
 * расчета разрешенной скорости для различных типов транспортных средств.
 * Классы Car и Bus расширяют абстрактный класс Vehicle и предоставляют конкретные реализации
 * метода calculateAllowedSpeed().
 * Если нужно добавить новый тип транспортного средства, например, Train, можно создать новый подкласс
 * Train, не изменяя код класса Vehicle. Таким образом, класс Vehicle закрыт для модификации.
 * Открытость для расширения:
 *
 * Добавление новых типов транспортных средств (расширение) осуществляется путем создания новых подклассов Vehicle.
 * Расширение функциональности (например, добавление новых методов) в подклассах также не требует изменений
 * в базовом классе Vehicle.
 * Класс Vehicle открыт для расширения новыми типами транспортных средств, не нарушая функциональность
 * существующего кода.
 */
public abstract class Vehicle {
    int maxSpeed; // Максимальная скорость транспортного средства
    String type;  // Тип транспортного средства

    /**
     * Конструктор класса Vehicle для создания объекта с указанной максимальной скоростью и типом.
     *
     * @param maxSpeed Максимальная скорость транспортного средства.
     * @param type     Тип транспортного средства.
     */
    public Vehicle(int maxSpeed, String type) {
        this.maxSpeed = maxSpeed;
        this.type = type;
    }

    /**
     * Абстрактный метод, который должен быть реализован в подклассах.
     * Рассчитывает разрешенную скорость для конкретного типа транспортного средства.
     *
     * @return Разрешенная скорость для данного транспортного средства.
     */
    public abstract double calculateAllowedSpeed();
}
